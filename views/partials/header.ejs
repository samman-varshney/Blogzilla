<div id="toastContainer" class="position-fixed top-0 end-0 p-3" style="z-index: 1100;"></div>


<div class="modal fade" id="searchModal" tabindex="-1" aria-labelledby="searchModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
    <div class="modal-content border-0 shadow-lg">
      <div class="modal-header search-modal-header border-bottom-0">
        <form class="d-flex w-100" onsubmit="search(event)">
          <select class="form-select rounded-start-pill" name="type" aria-label="Default select example" required>
            <option value="" selected disabled>Type</option>
            <option value="1">Blog</option>
            <option value="2">User</option>
          </select>
          <input type="search" class="form-control rounded-end-pill" name="query" placeholder="search" required>
          <button type="submit" class="btn"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25"
              fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
              <path
                d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
            </svg></button>
        </form>
      </div>
      <div class="modal-body search-modal-body">
        <small class="text-muted d-block mb-2">Search result</small>
        <div id="search-result" class="text-start" style="min-height: 200px;max-height: 500px; overflow-y: auto;">
          <!-- Results will be inserted here -->
              
        </div>
      </div>

      <div class="modal-footer search-modal-footer  border-top-0">
        <small class="text-muted">Use type to specify search context (Blog/User)</small>
      </div>
    </div>
  </div>
</div>




<header class="blogzilla-header">
  <div class="header-container ">
    <!-- Logo and Site Name -->
    <div class="branding me-2">
      <a href="/" class="logo-link">
        <img src="/images/neonxzilla.png" class="logo-icon" alt="">
        <span class="site-name">Blogzilla</span>
      </a>
    </div>

    <!-- Main Navigation -->
    <nav class="main-nav me-2">
      <ul class="nav-list">
        <li class="nav-item"><a href="/" class="nav-link">Home</a></li>
        <li class="nav-item"><a href="/blogs" class="nav-link">Blogs</a></li>

        <%if(currentUser && currentUser.isVerified){%>
          <li class="nav-item"><a href="/blogs/create" class="nav-link">Create</a></li>
          <% } %>
            <li class="nav-item"><a href="/about" class="nav-link">About</a></li>
      </ul>
    </nav>




    <div class="user-actions ">
      <!-- Search and User Actions -->
      <button type="button" id="search-button" class="btn  rounded-pill" data-bs-toggle="modal"
        data-bs-target="#searchModal" data-bs-whatever="@mdo">
        <svg id="search-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor"
          class="bi bi-search" viewBox="0 0 16 16">
          <path
            d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
        </svg>
        <span class="search-text">Search Blogzilla</span>
      </button>
      <%if(!currentUser || !currentUser.isVerified ) {%>
        <a href="/login" class="btn-header btn-header-login">
          <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
            <circle cx="12" cy="7" r="4"></circle>
          </svg>
          <span>Sign In</span>
        </a>
        <a href="/register" class="btn-header btn-header-primary btn-header-register">
          <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>
          </svg>
          <span>Register</span>
        </a>
        <%}else{%>
          <div class="dropdown-center p-0">
            <button class="btn  dropdown-toggle d-flex align-items-center p-0" type="button" id="userDropdown" data-bs-toggle="dropdown"
              aria-expanded="false" data-bs-offset="5,10">
              <img src="<%= currentUser.avatar.url %>" style="min-width: 45px;width: 45px; min-height: 45px;height: 45px; object-fit: cover" alt=""
                class="img-fluid border border-primary border-opacity-50 border-2 rounded-circle me-2"><span class="d-none d-md-inline me-md-2"><%=currentUser.fullname%></span>
                <i class="bi bi-caret-down-fill d-none d-md-inline"></i>
            </button>
            <ul class="dropdown-menu dropdown-menu-end p-0" aria-labelledby="userDropdown">
              <li><a class="dropdown-item" href="/dashboard"><i class="bi bi-clipboard-data-fill me-2"></i>Dashboard</a></li>
              <li><a class="dropdown-item" href="/users/<%=currentUser._id%>"><i class="bi bi-person-circle me-2"></i>Profile</a></li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item" href="/logout"><span class="me-2">Logout</span><i class="bi bi-box-arrow-right"></i> </a></li>
            </ul>
          </div>

          <% }%>
    </div>

    <!-- Mobile Menu Toggle -->
    <button class="mobile-menu-toggle" aria-label="Toggle menu">
      <span class="hamburger"></span>
    </button>
  </div>
  </div>

  <!-- Decorative elements -->
  <div  class="header-accent"></div>
</header>



<style>
  /* Modern Font Import */
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Space+Grotesk:wght@500;600&display=swap');
/* * {
  outline: 1px solid red;
} */
  #userDropdown::after {
    display: none;
  }

        #successToast{
            background-color: aquamarine;
        }
        #dangerToast{
            background-color: rgb(217, 74, 74);
        }
        #warningToast {
            background-color: rgb(234, 221, 105);
        }


  /* search styles */
  .search-modal-header, .search-modal-footer{
    background-color: #d3eaee;
  }
  /* .search-modal-body{
    background-color: #cde5e9;
  } */

  .search-modal-header select {
    width: 25%;
  }

  .search-modal-header img {
    width: 30px;
    margin-left: 10px;

  }

  #search-button {
   
    display: inline-flex;
    /* Use flex layout */
    align-items: center;
    /* Vertically align icon and text */
    gap: 8px;
    /* Space between icon and text */
    /* max-height: 40px; */
  
    padding-bottom: 10px;
    color: #4b5563;
    border: 1px solid #4b5563;
    transition: all 0.3s ease;
    /* Your custom padding */
  }

  #search-button:hover {
    background-color: #f5f3ff;
    border-color: #c7d2fe;
    transform: translateY(-1px);


  }

  /* Text transition for responsiveness */
  .search-text {
    display: inline-block;
    overflow: hidden;
    white-space: nowrap;

    opacity: 1;
    transition: max-width 0.3s ease, opacity 0.3s ease;
  }

  /* On small screens: hide the text smoothly */
  @media (max-width: 700px) {
    .search-text {
      max-width: 0;
      opacity: 0;
    }

    #search-button {
      gap: 0;
      padding-top: 10px;
      padding-left: 10px;
    }
  }




  /* Header Styles */
  .blogzilla-header {
    background-color: white;
    position: sticky;
    top: 0;
    z-index: 1000;
    padding: 0;
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  }

  .header-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 2rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 80px;
  }

  /* Branding Styles */
  .branding {
    display: flex;
    align-items: center;
    transition: transform 0.3s ease;
  }

  .branding:hover {
    transform: translateX(3px);
  }

  .logo-link {
    display: flex;
    align-items: center;
    text-decoration: none;
  }

  .logo-icon {
    width: 36px;
    height: 36px;
    margin-right: 12px;
    transition: transform 0.3s ease;
  }

  .logo-link:hover .logo-icon {
    transform: rotate(15deg);
  }

  .site-name {
    font-family: 'Space Grotesk', sans-serif;
    font-weight: 600;
    font-size: 1.8rem;
    background: linear-gradient(135deg, #141f3b 10%, #2a3c67 90%);

    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    letter-spacing: -0.5px;
  }

  /* Navigation Styles */
  .main-nav .nav-list {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
    gap: 1.5rem;
  }

  .nav-link {
    text-decoration: none;
    color: #4b5563;
    font-family: 'Inter', sans-serif;
    font-weight: 500;
    font-size: 1.05rem;
    padding: 0.75rem 0;
    position: relative;
    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }

  .nav-link:hover {
    color: #111827;
  }

  .nav-link:after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 3px;
    background: linear-gradient(135deg, #141f3b 10%, #2a3c67 90%);
    border-radius: 3px;
    transition: width 0.3s ease;
  }

  .nav-link:hover:after {
    width: 70%;
  }

  /* Header Actions */
  .header-actions {
    display: flex;
    align-items: center;

    gap: 1rem;
  }

  /* Search Bar Styles */
  .search-form {
    position: relative;
    display: flex;
    align-items: center;
  }

  .search-input {
    padding: 0.6rem 1rem 0.6rem 2.5rem;
    border: 1px solid #e5e7eb;
    border-radius: 50px;
    outline: none;
    font-family: 'Inter', sans-serif;
    font-size: 0.95rem;
    width: 200px;
    transition: all 0.3s ease;
    background-color: #f9fafb;
  }

  .search-input:focus {
    width: 240px;
    border-color: #c7d2fe;
    background-color: #ffffff;
    box-shadow: 0 0 0 3px rgba(165, 180, 252, 0.3);
  }

  .search-button {
    position: absolute;
    left: 12px;
    background: none;
    border: none;
    cursor: pointer;
    color: #9ca3af;
  }

  /* Button Styles */
  .user-actions {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .btn-header {
    padding: 0.65rem 1.25rem;
    border-radius: 50px;
    text-decoration: none;
    font-weight: 500;
    font-family: 'Inter', sans-serif;
    font-size: 0.95rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }

  .btn-header-login {
    color: #141f3b;
    border: 1px solid #e0e7ff;
    background: #ffffff;
  }

  .btn-header-login:hover {
    background-color: #f5f3ff;
    border-color: #c7d2fe;
    transform: translateY(-1px);
  }

  .btn-header-primary {
    background: linear-gradient(135deg, #141f3b 10%, #2a3c67 90%);
    color: white;
    border: none;
  }

  .btn-header-primary:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 6px -1px rgba(79, 70, 229, 0.2), 0 2px 4px -1px rgba(79, 70, 229, 0.1);
  }

  /* Mobile Menu Toggle */
  .mobile-menu-toggle {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.75rem;
    border-radius: 50%;
    transition: background-color 0.2s;
  }

  .mobile-menu-toggle:hover {
    background-color: #f3f4f6;
  }

  .hamburger {
    display: block;
    width: 22px;
    height: 2px;
    background-color: #374151;
    position: relative;
    transition: transform 0.3s ease;
  }

  .mobile-menu-toggle.active .hamburger {
    transform: rotate(45deg);
  }

  .hamburger:before,
  .hamburger:after {
    content: '';
    position: absolute;
    width: 22px;
    height: 2px;
    background-color: #374151;
    left: 0;
    transition: transform 0.3s ease;
  }

  .hamburger:before {
    top: -6px;
  }

  .hamburger:after {
    bottom: -6px;
  }

  .mobile-menu-toggle.active .hamburger:before {
    transform: translateY(6px) rotate(90deg);
  }

  .mobile-menu-toggle.active .hamburger:after {
    transform: translateY(-6px) rotate(90deg);
  }

  /* Header Accent */
  .header-accent {
    height: 4px;
    background: linear-gradient(135deg, #141f3b 10%, #2a3c67 90%);
    background-size: 200% auto;
    animation: gradientFlow 8s ease infinite;
  }

  @keyframes gradientFlow {
    0% {
      background-position: 0% 50%;
    }

    50% {
      background-position: 100% 50%;
    }

    100% {
      background-position: 0% 50%;
    }
  }

  /* Responsive Styles */
  @media (max-width: 1024px) {
    .main-nav {
      position: fixed;
      top: 80px;
      left: 0;
      width: 100%;
      background-color: white;
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
      padding: 1.5rem 0;
      display: none;
      z-index: 999;
    }

    .main-nav.active {
      display: block;
    }

    .nav-list {
      flex-direction: column;
      align-items: center;
      gap: 1.5rem !important;
    }

    .mobile-menu-toggle {
      display: block;
    }

    .header-container {
      padding: 0 1.5rem;
    }
  }

  @media (max-width: 768px) {
    .search-input {
      width: 160px;
    }

    .search-input:focus {
      width: 180px;
    }

    .header-container {
      padding: 0 1.25rem;
      height: 70px;
    }

    .site-name {
      font-size: 1.6rem;
    }
  }

  @media (max-width: 700px) {
    .search-bar {
      display: none;
    }

    .user-actions .btn-header span {
      display: none;
    }

    .user-actions .btn-header {
      padding: 0.65rem;
      border-radius: 50%;
    }

    .header-container {
      padding: 0 1rem;
    }
  }
    @media (max-width: 380px) {
      .user-actions{
        gap: 0.2rem;
       
      }
    .btn-header-login {
      display: none;
    }
    #search-button{
      height: 40px;
      width: 40px;
    }
  }
</style>
<script src="/js/bootstrapToast.js"></script>


<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Mobile menu functionality
    const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');
    const mainNav = document.querySelector('.main-nav');

    mobileMenuToggle.addEventListener('click', function () {
      this.classList.toggle('active');
      mainNav.classList.toggle('active');
    });

    // Close mobile menu when clicking on a link
    const navLinks = document.querySelectorAll('.nav-link');
    navLinks.forEach(link => {
      link.addEventListener('click', function () {
        if (window.innerWidth <= 1024) {
          mobileMenuToggle.classList.remove('active');
          mainNav.classList.remove('active');
        }
      });
    });

    // Add scroll effect to header
    const header = document.querySelector('.blogzilla-header');
    let lastScroll = 0;

    window.addEventListener('scroll', function () {
      const currentScroll = window.pageYOffset;
      const scrollThreshold = 700; // pixels before hiding

      if (currentScroll <= 0) {
        header.style.boxShadow = 'none';
        header.style.transform = 'translateY(0)';
        return;
      }

      if (currentScroll > lastScroll && currentScroll > scrollThreshold) {
        // Only hide if scrolled down past threshold
        header.style.transform = 'translateY(-100%)';
      } else {
        // Show header
        header.style.transform = 'translateY(0)';
        header.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.08)';
      }

      lastScroll = currentScroll;
    });
  });

  function searchBlogComponent(blog) {
    return `<div class="mb-3 p-3 border rounded">
              <a href="/blogs/${blog._id}/show" class="text-decoration-none">
                <h6 class="mb-1">${blog.title}</h6>
              </a>
              <div class="d-flex justify-content-between small text-muted">
                <span>${blog.stats.likeCount} likes</span>
                <span>${blog.stats.viewCount} views</span>
                
              </div>
            </div>`
  }

  function searchUserComponent(user){
    return `<div class="mb-3 p-3 border rounded">
              <div class="d-flex justify-content-between align-items-center">
                <a href="/users/${user._id}" class="text-decoration-none">
                  <h6 class="mb-0">${user.fullname}</h6>
                  <small class="text-muted">@${user.handle}</small>
                </a>
                <span class="badge bg-light text-dark">${user.stats.blogCount} blogs</span>
              </div>
            </div>`
  }

  async function search(event) {
    event.preventDefault();

    const form = event.target;
    const searchResult = document.querySelector('#search-result')
    searchResult.innerHTML = `<div class="d-flex justify-content-center py-5">
                                <div class="spinner-border" style="color: rgb(62, 139, 142);width:5rem;height: 5rem;" role="status">
                                  <span class="visually-hidden">Loading...</span>
                                </div>
                              </div>`
    const type = form.elements['type'].value;
    const query = form.elements['query'].value.toLowerCase(); // case-insensitive
    try {
      const res = await fetch(`/api/search?q=${query}&type=${type}`)
      const result = await res.json();
      if (res.ok) {
        render(result, type, event);
        form.elements['query'].value = "";
      } else {
        showToast('warning', result.message)
      }
    } catch (err) {
      console.log(err)
      showToast('danger', err.message)
    }
  }

  function render(result, type, event) {
    const searchResult = document.querySelector('#search-result')
    if (result.count === 0) {
      searchResult.innerHTML = `<div class="d-flex flex-column align-items-center justify-content-center mt-4">
                            <img src="/images/question-mark.svg" style="width: 200px; height:auto;" alt="">
                            <p class="mt-3 text-slate-600 ">No result found</p>
                        </div>`;
      return;
    }
    const component = type === '1' ? searchBlogComponent : searchUserComponent;
    searchResult.innerHTML = result.response.map(component).join('');

  }


</script>